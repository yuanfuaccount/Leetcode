递归的基本思想是可以拆分成更小的子问题，先看一个例子

Part 1:
求一颗二叉树的最大深度。
int maxDepthTree(TreeNode* p)
{
  if(p==NULL)
    return 0;
  return max(maxDepthTree(p->left),maxDepthTree(p->right))+1;
}

分析上面的例子，一个递归可以分为两大部分：
1.一个基本情况，此基本情况不再调用递归，直接返回值（对应此处p==NULL）
2.将问题分成小的递归子问题，比如本题求二叉树的深度，那么就是左子树深度或右子树深度最大值+1。拆分成了求左子树深度和右子树深度。

按照上面的逻辑，再来看一个经典例子，
